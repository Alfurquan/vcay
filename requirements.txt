Models ----->

USER
id : mongoose object ID
name : string
email : string
password : string
phone : string
role : [admin,host,visitor] : default set as visitor,
bookings : [{ ref : Booking }]


RENTAL
id : mongoose Object ID
title : string,
description : string,
ownerId : ref User (host user)
mainImage : string,
subImages : [string],
address : {
            street : string,
            city : string,
            state : string,
            zipcode : string,
            country : string
          },
location : {
            latitude: number,
            longitude : number
            }
bedrooms : number,
guests : number,
dailyRate : number,
createdAt : date,
bookings : [{ ref : Booking }],
reservedDates : [{ from : , to : }]

BOOKING
id : mongoose Object ID,
userId : ref user
rentalId : ref rental,
bookingFrom : date,
bookingTo : date
totalAmount : number


USERS AND THEIR ROLES ---->

ADMIN 
--> Can ADD/EDIT/DELETE any rentals,user and bookings

HOSTS
--> can ADD rentals
--> can EDIT/DELETE only their own rentals
--> can view bookings for their own rentals

VISITOR
--> can search rentals
--> can book rentals
--> can cancel bookings
--> cannot ADD/EDIT/DELETE any rentals

BOOKINGS LOGIC------------------------------------------------->

--> Request body{
  rentalId,
  startFrom,
  EndOn,
  guests
}

-->First check if the user requesting the booking is the owner of the rental
    -->If yes send an error
    -->If no continue

--->Create a booking object
--->Find the rental including the bookings array by populating it
--->Calculate totalAmount by noOfDays * dailyRentalRate
--->Include totalAmount in the booking object
--->Validate the booking by the following LOGIC

    Loop through all bookings of the found rental and check for the following:-

    (startAtOfBooking < startAtOfProposedBooking && endAtOfBooking < startAtOfProposedBooking ) ||
    (endAtOfProposedBooking < endAtOfBooking && endAtOfProposedBooking < startAtOfBooking)

-->If booking valid save the booking
-->Update Rentals to include the new booking
-->Update Users to include the new booking

SEARCHING LOGIC--------------------------------------------------------->

---> Request Body{
  city,
  startFrom,
  endOn,
  noOfRooms,
  noOfguests
}

--->Filter rentals by applied params in the req.body
    --->For city exact match
    --->For rooms exact match
    --->For guests return rentals with guests >= requested no of guests
    --->For dates check the available rentals for those dates
        Logic for checking---->

        use $elemMatch and $not to check for rentals that are free for that range of dates